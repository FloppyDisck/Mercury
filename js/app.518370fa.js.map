{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/FloppyDisck/Mercury/FloppyDisck.Mercury.Mercury/module/types/Mercury/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/FloppyDisck/Mercury/FloppyDisck.Mercury.Mercury/module/types/Mercury/util.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/FloppyDisck/Mercury/FloppyDisck.Mercury.Mercury/module/rest.js","webpack:///./src/store/generated/FloppyDisck/Mercury/FloppyDisck.Mercury.Mercury/module/index.js","webpack:///./src/store/generated/FloppyDisck/Mercury/FloppyDisck.Mercury.Mercury/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?dcf2","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/FloppyDisck/Mercury/FloppyDisck.Mercury.Mercury/module/types/Mercury/account.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/FloppyDisck/Mercury/FloppyDisck.Mercury.Mercury/module/types/Mercury/purchase.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/FloppyDisck/Mercury/FloppyDisck.Mercury.Mercury/module/types/Mercury/review.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/FloppyDisck/Mercury/FloppyDisck.Mercury.Mercury/module/types/Mercury/listing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseMsgCreateReview","creator","reviewType","reviewId","score","description","MsgCreateReview","uint64","baseMsgUpdateReview","id","MsgUpdateReview","baseMsgDeleteReview","MsgDeleteReview","baseMsgCreatePurchase","listing","MsgCreatePurchase","baseMsgUpdatePurchase","MsgUpdatePurchase","baseMsgDeletePurchase","MsgDeletePurchase","baseMsgCreateListing","amount","currency","MsgCreateListing","baseMsgUpdateListing","MsgUpdateListing","baseMsgDeleteListing","MsgDeleteListing","baseMsgCreateAccount","MsgCreateAccount","baseMsgUpdateAccount","MsgUpdateAccount","baseMsgDeleteAccount","MsgDeleteAccount","baseHeight","revisionNumber","revisionHeight","Height","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","basePrice","Price","baseAvgReview","average","count","sum","AvgReview","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","V1Beta1ProposalStatus","V1Beta1VoteOption","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryParams","paramsType","method","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter","types","MsgSubmitProposal","MsgDeposit","MsgVote","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgSubmitProposal","msgDeposit","msgVote","queryClient","initTxClient","vuexGetters","initQueryClient","getStructure","template","structure","fields","field","getDefaultState","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","_Structure","TextProposal","DepositParams","VotingParams","TallyParams","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getProposal","getProposals","getVote","getVotes","getParams","getDeposit","getDeposits","getTallyResult","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","QueryProposal","options","subscribe","all","proposal_id","SpVuexError","QueryProposals","pagination","nextKey","next_values","prop","QueryVote","QueryVotes","QueryParams","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","msg","sendMsgDeposit","sendMsgVote","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","V1Order","V1State","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","client_id","QueryClientStates","QueryConsensusState","revision_number","revision_height","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","MsgCreateVestingAccount","msgCreateVestingAccount","V1Beta1BondStatus","sendMsgCreateVestingAccount","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryAccountAll","queryAccountWithName","queryAccountWithReview","review","queryAccountWallet","user","queryAccount","queryListingAll","queryListingWithName","queryListingWithReview","queryListingWithSeller","seller","queryListing","queryPurchaseAll","queryPurchaseWithBuyer","buyer","queryPurchaseWithListing","queryPurchase","queryReviewAll","queryReviewWithReviewed","queryReviewWithReviewer","queryReviewWithScore","queryReview","msgUpdatePurchase","msgDeleteListing","msgDeleteAccount","msgUpdateListing","msgDeletePurchase","msgDeleteReview","msgCreateReview","msgCreateListing","msgCreateAccount","msgCreatePurchase","msgUpdateAccount","msgUpdateReview","Review","ReviewAll","ReviewWithScore","ReviewWithReviewer","ReviewWithReviewed","Purchase","PurchaseAll","PurchaseWithListing","PurchaseWithBuyer","Listing","ListingAll","ListingWithSeller","ListingWithReview","ListingWithName","Account","AccountWallet","AccountAll","AccountWithName","AccountWithReview","Reviewed","getReview","getReviewAll","getReviewWithScore","getReviewWithReviewer","getReviewWithReviewed","getPurchase","getPurchaseAll","getPurchaseWithListing","getPurchaseWithBuyer","getListing","getListingAll","getListingWithSeller","getListingWithReview","getListingWithName","getAccount","getAccountWallet","getAccountAll","getAccountWithName","getAccountWithReview","QueryReview","QueryReviewAll","QueryReviewWithScore","QueryReviewWithReviewer","QueryReviewWithReviewed","QueryPurchase","QueryPurchaseAll","QueryPurchaseWithListing","QueryPurchaseWithBuyer","QueryListing","QueryListingAll","QueryListingWithSeller","QueryListingWithReview","QueryListingWithName","QueryAccount","QueryAccountWallet","QueryAccountAll","QueryAccountWithName","QueryAccountWithReview","sendMsgUpdatePurchase","sendMsgDeleteListing","sendMsgDeleteAccount","sendMsgUpdateListing","sendMsgDeletePurchase","sendMsgDeleteReview","sendMsgCreateReview","sendMsgCreateListing","sendMsgCreateAccount","sendMsgCreatePurchase","sendMsgUpdateAccount","sendMsgUpdateReview","CosmosCosmosSdkCosmosGovV1Beta1","load","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","FloppyDisckMercuryFloppyDisckMercuryMercury","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","modulePath","moduleType","routerHistory","createWebHistory","routes","component","Index","Types","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","basePurchase","price","baseReviewed","baseReview","reviewed","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","baseListing","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.518370fa.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"FloppyDisck.Mercury.Mercury\";\nconst baseMsgCreateReview = {\n    creator: \"\",\n    reviewType: \"\",\n    reviewId: 0,\n    score: 0,\n    description: \"\",\n};\nexport const MsgCreateReview = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.reviewType !== \"\") {\n            writer.uint32(18).string(message.reviewType);\n        }\n        if (message.reviewId !== 0) {\n            writer.uint32(24).uint64(message.reviewId);\n        }\n        if (message.score !== 0) {\n            writer.uint32(32).uint32(message.score);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(42).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateReview };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.reviewType = reader.string();\n                    break;\n                case 3:\n                    message.reviewId = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.score = reader.uint32();\n                    break;\n                case 5:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateReview };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.reviewType !== undefined && object.reviewType !== null) {\n            message.reviewType = String(object.reviewType);\n        }\n        else {\n            message.reviewType = \"\";\n        }\n        if (object.reviewId !== undefined && object.reviewId !== null) {\n            message.reviewId = Number(object.reviewId);\n        }\n        else {\n            message.reviewId = 0;\n        }\n        if (object.score !== undefined && object.score !== null) {\n            message.score = Number(object.score);\n        }\n        else {\n            message.score = 0;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.reviewType !== undefined && (obj.reviewType = message.reviewType);\n        message.reviewId !== undefined && (obj.reviewId = message.reviewId);\n        message.score !== undefined && (obj.score = message.score);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateReview };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.reviewType !== undefined && object.reviewType !== null) {\n            message.reviewType = object.reviewType;\n        }\n        else {\n            message.reviewType = \"\";\n        }\n        if (object.reviewId !== undefined && object.reviewId !== null) {\n            message.reviewId = object.reviewId;\n        }\n        else {\n            message.reviewId = 0;\n        }\n        if (object.score !== undefined && object.score !== null) {\n            message.score = object.score;\n        }\n        else {\n            message.score = 0;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateReviewResponse = { id: 0 };\nexport const MsgCreateReviewResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateReviewResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateReviewResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateReviewResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateReview = {\n    creator: \"\",\n    id: 0,\n    score: 0,\n    description: \"\",\n};\nexport const MsgUpdateReview = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.score !== 0) {\n            writer.uint32(24).uint32(message.score);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(34).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateReview };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.score = reader.uint32();\n                    break;\n                case 4:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateReview };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.score !== undefined && object.score !== null) {\n            message.score = Number(object.score);\n        }\n        else {\n            message.score = 0;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.score !== undefined && (obj.score = message.score);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateReview };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.score !== undefined && object.score !== null) {\n            message.score = object.score;\n        }\n        else {\n            message.score = 0;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateReviewResponse = {};\nexport const MsgUpdateReviewResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateReviewResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateReviewResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateReviewResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteReview = { creator: \"\", id: 0 };\nexport const MsgDeleteReview = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteReview };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteReview };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteReview };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteReviewResponse = {};\nexport const MsgDeleteReviewResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteReviewResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteReviewResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteReviewResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreatePurchase = {\n    creator: \"\",\n    listing: 0,\n    description: \"\",\n};\nexport const MsgCreatePurchase = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.listing !== 0) {\n            writer.uint32(16).uint64(message.listing);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(26).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePurchase };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.listing = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePurchase };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.listing !== undefined && object.listing !== null) {\n            message.listing = Number(object.listing);\n        }\n        else {\n            message.listing = 0;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.listing !== undefined && (obj.listing = message.listing);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePurchase };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.listing !== undefined && object.listing !== null) {\n            message.listing = object.listing;\n        }\n        else {\n            message.listing = 0;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePurchaseResponse = { id: 0 };\nexport const MsgCreatePurchaseResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreatePurchaseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreatePurchaseResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreatePurchaseResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePurchase = { creator: \"\", id: 0, description: \"\" };\nexport const MsgUpdatePurchase = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(42).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePurchase };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePurchase };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePurchase };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePurchaseResponse = {};\nexport const MsgUpdatePurchaseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdatePurchaseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdatePurchaseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdatePurchaseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeletePurchase = { creator: \"\", id: 0 };\nexport const MsgDeletePurchase = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePurchase };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePurchase };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePurchase };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePurchaseResponse = {};\nexport const MsgDeletePurchaseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeletePurchaseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeletePurchaseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeletePurchaseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateListing = {\n    creator: \"\",\n    amount: 0,\n    currency: \"\",\n    name: \"\",\n    description: \"\",\n};\nexport const MsgCreateListing = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.currency !== \"\") {\n            writer.uint32(26).string(message.currency);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(42).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateListing };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.currency = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateListing };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.currency !== undefined && object.currency !== null) {\n            message.currency = String(object.currency);\n        }\n        else {\n            message.currency = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.currency !== undefined && (obj.currency = message.currency);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateListing };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.currency !== undefined && object.currency !== null) {\n            message.currency = object.currency;\n        }\n        else {\n            message.currency = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateListingResponse = { id: 0 };\nexport const MsgCreateListingResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateListingResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateListingResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateListingResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateListing = {\n    creator: \"\",\n    id: 0,\n    amount: 0,\n    currency: \"\",\n    name: \"\",\n    description: \"\",\n};\nexport const MsgUpdateListing = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(24).uint64(message.amount);\n        }\n        if (message.currency !== \"\") {\n            writer.uint32(34).string(message.currency);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(50).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateListing };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.currency = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateListing };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.currency !== undefined && object.currency !== null) {\n            message.currency = String(object.currency);\n        }\n        else {\n            message.currency = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.currency !== undefined && (obj.currency = message.currency);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateListing };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.currency !== undefined && object.currency !== null) {\n            message.currency = object.currency;\n        }\n        else {\n            message.currency = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateListingResponse = {};\nexport const MsgUpdateListingResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateListingResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateListingResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateListingResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteListing = { creator: \"\", id: 0 };\nexport const MsgDeleteListing = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteListing };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteListing };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteListing };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteListingResponse = {};\nexport const MsgDeleteListingResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteListingResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteListingResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteListingResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateAccount = { creator: \"\", name: \"\" };\nexport const MsgCreateAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateAccount };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateAccount };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateAccountResponse = { id: 0 };\nexport const MsgCreateAccountResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateAccountResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateAccountResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateAccount = { creator: \"\", id: 0, name: \"\" };\nexport const MsgUpdateAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(26).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateAccount };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateAccount };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateAccountResponse = {};\nexport const MsgUpdateAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateAccountResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteAccount = { creator: \"\", id: 0 };\nexport const MsgDeleteAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteAccount };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteAccount };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteAccountResponse = {};\nexport const MsgDeleteAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateReview(request) {\n        const data = MsgCreateReview.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"CreateReview\", data);\n        return promise.then((data) => MsgCreateReviewResponse.decode(new Reader(data)));\n    }\n    UpdateReview(request) {\n        const data = MsgUpdateReview.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"UpdateReview\", data);\n        return promise.then((data) => MsgUpdateReviewResponse.decode(new Reader(data)));\n    }\n    DeleteReview(request) {\n        const data = MsgDeleteReview.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"DeleteReview\", data);\n        return promise.then((data) => MsgDeleteReviewResponse.decode(new Reader(data)));\n    }\n    CreatePurchase(request) {\n        const data = MsgCreatePurchase.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"CreatePurchase\", data);\n        return promise.then((data) => MsgCreatePurchaseResponse.decode(new Reader(data)));\n    }\n    UpdatePurchase(request) {\n        const data = MsgUpdatePurchase.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"UpdatePurchase\", data);\n        return promise.then((data) => MsgUpdatePurchaseResponse.decode(new Reader(data)));\n    }\n    DeletePurchase(request) {\n        const data = MsgDeletePurchase.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"DeletePurchase\", data);\n        return promise.then((data) => MsgDeletePurchaseResponse.decode(new Reader(data)));\n    }\n    CreateListing(request) {\n        const data = MsgCreateListing.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"CreateListing\", data);\n        return promise.then((data) => MsgCreateListingResponse.decode(new Reader(data)));\n    }\n    UpdateListing(request) {\n        const data = MsgUpdateListing.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"UpdateListing\", data);\n        return promise.then((data) => MsgUpdateListingResponse.decode(new Reader(data)));\n    }\n    DeleteListing(request) {\n        const data = MsgDeleteListing.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"DeleteListing\", data);\n        return promise.then((data) => MsgDeleteListingResponse.decode(new Reader(data)));\n    }\n    CreateAccount(request) {\n        const data = MsgCreateAccount.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"CreateAccount\", data);\n        return promise.then((data) => MsgCreateAccountResponse.decode(new Reader(data)));\n    }\n    UpdateAccount(request) {\n        const data = MsgUpdateAccount.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"UpdateAccount\", data);\n        return promise.then((data) => MsgUpdateAccountResponse.decode(new Reader(data)));\n    }\n    DeleteAccount(request) {\n        const data = MsgDeleteAccount.encode(request).finish();\n        const promise = this.rpc.request(\"FloppyDisck.Mercury.Mercury.Msg\", \"DeleteAccount\", data);\n        return promise.then((data) => MsgDeleteAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"FloppyDisck.Mercury.Mercury\";\nconst basePrice = { amount: 0, currency: \"\" };\nexport const Price = {\n    encode(message, writer = Writer.create()) {\n        if (message.amount !== 0) {\n            writer.uint32(8).uint64(message.amount);\n        }\n        if (message.currency !== \"\") {\n            writer.uint32(18).string(message.currency);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePrice };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.currency = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePrice };\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.currency !== undefined && object.currency !== null) {\n            message.currency = String(object.currency);\n        }\n        else {\n            message.currency = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.currency !== undefined && (obj.currency = message.currency);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePrice };\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.currency !== undefined && object.currency !== null) {\n            message.currency = object.currency;\n        }\n        else {\n            message.currency = \"\";\n        }\n        return message;\n    },\n};\nconst baseAvgReview = { average: 0, count: 0, sum: 0 };\nexport const AvgReview = {\n    encode(message, writer = Writer.create()) {\n        if (message.average !== 0) {\n            writer.uint32(8).uint32(message.average);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint32(message.count);\n        }\n        if (message.sum !== 0) {\n            writer.uint32(24).uint32(message.sum);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAvgReview };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.average = reader.uint32();\n                    break;\n                case 2:\n                    message.count = reader.uint32();\n                    break;\n                case 3:\n                    message.sum = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAvgReview };\n        if (object.average !== undefined && object.average !== null) {\n            message.average = Number(object.average);\n        }\n        else {\n            message.average = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.sum !== undefined && object.sum !== null) {\n            message.sum = Number(object.sum);\n        }\n        else {\n            message.sum = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.average !== undefined && (obj.average = message.average);\n        message.count !== undefined && (obj.count = message.count);\n        message.sum !== undefined && (obj.sum = message.sum);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAvgReview };\n        if (object.average !== undefined && object.average !== null) {\n            message.average = object.average;\n        }\n        else {\n            message.average = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.sum !== undefined && object.sum !== null) {\n            message.sum = object.sum;\n        }\n        else {\n            message.sum = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t\t\t\t<SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=21017ee9\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=5695b462\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title Mercury/query.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAccountAll\n         * @request GET:/FloppyDisck/Mercury/Mercury/account\n         */\n        this.queryAccountAll = (query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/account`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAccountWithName\n         * @request GET:/FloppyDisck/Mercury/Mercury/account/name/{name}\n         */\n        this.queryAccountWithName = (name, query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/account/name/${name}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAccountWithReview\n         * @request GET:/FloppyDisck/Mercury/Mercury/account/review/{review}\n         */\n        this.queryAccountWithReview = (review, query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/account/review/${review}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAccountWallet\n         * @request GET:/FloppyDisck/Mercury/Mercury/account/wallet/{user}\n         */\n        this.queryAccountWallet = (user, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/account/wallet/${user}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAccount\n         * @request GET:/FloppyDisck/Mercury/Mercury/account/{id}\n         */\n        this.queryAccount = (id, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/account/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryListingAll\n         * @request GET:/FloppyDisck/Mercury/Mercury/listing\n         */\n        this.queryListingAll = (query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/listing`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryListingWithName\n         * @request GET:/FloppyDisck/Mercury/Mercury/listing/name/{name}\n         */\n        this.queryListingWithName = (name, query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/listing/name/${name}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryListingWithReview\n         * @request GET:/FloppyDisck/Mercury/Mercury/listing/review/{review}\n         */\n        this.queryListingWithReview = (review, query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/listing/review/${review}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryListingWithSeller\n         * @request GET:/FloppyDisck/Mercury/Mercury/listing/seller/{seller}\n         */\n        this.queryListingWithSeller = (seller, query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/listing/seller/${seller}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryListing\n         * @request GET:/FloppyDisck/Mercury/Mercury/listing/{id}\n         */\n        this.queryListing = (id, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/listing/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPurchaseAll\n         * @request GET:/FloppyDisck/Mercury/Mercury/purchase\n         */\n        this.queryPurchaseAll = (query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/purchase`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPurchaseWithBuyer\n         * @request GET:/FloppyDisck/Mercury/Mercury/purchase/buyer/{buyer}\n         */\n        this.queryPurchaseWithBuyer = (buyer, query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/purchase/buyer/${buyer}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPurchaseWithListing\n         * @request GET:/FloppyDisck/Mercury/Mercury/purchase/listing/{listing}\n         */\n        this.queryPurchaseWithListing = (listing, query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/purchase/listing/${listing}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPurchase\n         * @request GET:/FloppyDisck/Mercury/Mercury/purchase/{id}\n         */\n        this.queryPurchase = (id, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/purchase/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReviewAll\n         * @request GET:/FloppyDisck/Mercury/Mercury/review\n         */\n        this.queryReviewAll = (query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/review`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReviewWithReviewed\n         * @request GET:/FloppyDisck/Mercury/Mercury/review/from/{type}/{id}\n         */\n        this.queryReviewWithReviewed = (type, id, query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/review/from/${type}/${id}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReviewWithReviewer\n         * @request GET:/FloppyDisck/Mercury/Mercury/review/reviewer/{creator}\n         */\n        this.queryReviewWithReviewer = (creator, query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/review/reviewer/${creator}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReviewWithScore\n         * @request GET:/FloppyDisck/Mercury/Mercury/review/score/{score}\n         */\n        this.queryReviewWithScore = (score, query, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/review/score/${score}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReview\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/FloppyDisck/Mercury/Mercury/review/{id}\n         */\n        this.queryReview = (id, params = {}) => this.request({\n            path: `/FloppyDisck/Mercury/Mercury/review/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdatePurchase } from \"./types/Mercury/tx\";\nimport { MsgDeleteListing } from \"./types/Mercury/tx\";\nimport { MsgDeleteAccount } from \"./types/Mercury/tx\";\nimport { MsgUpdateListing } from \"./types/Mercury/tx\";\nimport { MsgDeletePurchase } from \"./types/Mercury/tx\";\nimport { MsgDeleteReview } from \"./types/Mercury/tx\";\nimport { MsgCreateReview } from \"./types/Mercury/tx\";\nimport { MsgCreateListing } from \"./types/Mercury/tx\";\nimport { MsgCreateAccount } from \"./types/Mercury/tx\";\nimport { MsgCreatePurchase } from \"./types/Mercury/tx\";\nimport { MsgUpdateAccount } from \"./types/Mercury/tx\";\nimport { MsgUpdateReview } from \"./types/Mercury/tx\";\nconst types = [\n    [\"/FloppyDisck.Mercury.Mercury.MsgUpdatePurchase\", MsgUpdatePurchase],\n    [\"/FloppyDisck.Mercury.Mercury.MsgDeleteListing\", MsgDeleteListing],\n    [\"/FloppyDisck.Mercury.Mercury.MsgDeleteAccount\", MsgDeleteAccount],\n    [\"/FloppyDisck.Mercury.Mercury.MsgUpdateListing\", MsgUpdateListing],\n    [\"/FloppyDisck.Mercury.Mercury.MsgDeletePurchase\", MsgDeletePurchase],\n    [\"/FloppyDisck.Mercury.Mercury.MsgDeleteReview\", MsgDeleteReview],\n    [\"/FloppyDisck.Mercury.Mercury.MsgCreateReview\", MsgCreateReview],\n    [\"/FloppyDisck.Mercury.Mercury.MsgCreateListing\", MsgCreateListing],\n    [\"/FloppyDisck.Mercury.Mercury.MsgCreateAccount\", MsgCreateAccount],\n    [\"/FloppyDisck.Mercury.Mercury.MsgCreatePurchase\", MsgCreatePurchase],\n    [\"/FloppyDisck.Mercury.Mercury.MsgUpdateAccount\", MsgUpdateAccount],\n    [\"/FloppyDisck.Mercury.Mercury.MsgUpdateReview\", MsgUpdateReview],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpdatePurchase: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgUpdatePurchase\", value: data }),\n        msgDeleteListing: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgDeleteListing\", value: data }),\n        msgDeleteAccount: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgDeleteAccount\", value: data }),\n        msgUpdateListing: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgUpdateListing\", value: data }),\n        msgDeletePurchase: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgDeletePurchase\", value: data }),\n        msgDeleteReview: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgDeleteReview\", value: data }),\n        msgCreateReview: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgCreateReview\", value: data }),\n        msgCreateListing: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgCreateListing\", value: data }),\n        msgCreateAccount: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgCreateAccount\", value: data }),\n        msgCreatePurchase: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgCreatePurchase\", value: data }),\n        msgUpdateAccount: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgUpdateAccount\", value: data }),\n        msgUpdateReview: (data) => ({ typeUrl: \"/FloppyDisck.Mercury.Mercury.MsgUpdateReview\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Listing } from \"./module/types/Mercury/listing\";\nimport { Reviewed } from \"./module/types/Mercury/review\";\nimport { Review } from \"./module/types/Mercury/review\";\nimport { Account } from \"./module/types/Mercury/account\";\nimport { Price } from \"./module/types/Mercury/util\";\nimport { AvgReview } from \"./module/types/Mercury/util\";\nimport { Purchase } from \"./module/types/Mercury/purchase\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Review: {},\n        ReviewAll: {},\n        ReviewWithScore: {},\n        ReviewWithReviewer: {},\n        ReviewWithReviewed: {},\n        Purchase: {},\n        PurchaseAll: {},\n        PurchaseWithListing: {},\n        PurchaseWithBuyer: {},\n        Listing: {},\n        ListingAll: {},\n        ListingWithSeller: {},\n        ListingWithReview: {},\n        ListingWithName: {},\n        Account: {},\n        AccountWallet: {},\n        AccountAll: {},\n        AccountWithName: {},\n        AccountWithReview: {},\n        _Structure: {\n            Listing: getStructure(Listing.fromPartial({})),\n            Reviewed: getStructure(Reviewed.fromPartial({})),\n            Review: getStructure(Review.fromPartial({})),\n            Account: getStructure(Account.fromPartial({})),\n            Price: getStructure(Price.fromPartial({})),\n            AvgReview: getStructure(AvgReview.fromPartial({})),\n            Purchase: getStructure(Purchase.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReview: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Review[JSON.stringify(params)] ?? {};\n        },\n        getReviewAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReviewAll[JSON.stringify(params)] ?? {};\n        },\n        getReviewWithScore: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReviewWithScore[JSON.stringify(params)] ?? {};\n        },\n        getReviewWithReviewer: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReviewWithReviewer[JSON.stringify(params)] ?? {};\n        },\n        getReviewWithReviewed: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReviewWithReviewed[JSON.stringify(params)] ?? {};\n        },\n        getPurchase: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Purchase[JSON.stringify(params)] ?? {};\n        },\n        getPurchaseAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PurchaseAll[JSON.stringify(params)] ?? {};\n        },\n        getPurchaseWithListing: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PurchaseWithListing[JSON.stringify(params)] ?? {};\n        },\n        getPurchaseWithBuyer: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PurchaseWithBuyer[JSON.stringify(params)] ?? {};\n        },\n        getListing: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Listing[JSON.stringify(params)] ?? {};\n        },\n        getListingAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ListingAll[JSON.stringify(params)] ?? {};\n        },\n        getListingWithSeller: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ListingWithSeller[JSON.stringify(params)] ?? {};\n        },\n        getListingWithReview: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ListingWithReview[JSON.stringify(params)] ?? {};\n        },\n        getListingWithName: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ListingWithName[JSON.stringify(params)] ?? {};\n        },\n        getAccount: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Account[JSON.stringify(params)] ?? {};\n        },\n        getAccountWallet: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AccountWallet[JSON.stringify(params)] ?? {};\n        },\n        getAccountAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AccountAll[JSON.stringify(params)] ?? {};\n        },\n        getAccountWithName: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AccountWithName[JSON.stringify(params)] ?? {};\n        },\n        getAccountWithReview: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AccountWithReview[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryReview({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryReview(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryReview(key.id)).data;\n                commit('QUERY', { query: 'Review', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReview', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReview']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryReview', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryReviewAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryReviewAll(query)).data : (await (await initQueryClient(rootGetters)).queryReviewAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryReviewAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ReviewAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReviewAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReviewAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryReviewAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryReviewWithScore({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryReviewWithScore(key.score, query)).data : (await (await initQueryClient(rootGetters)).queryReviewWithScore(key.score)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryReviewWithScore(key.score, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ReviewWithScore', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReviewWithScore', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReviewWithScore']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryReviewWithScore', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryReviewWithReviewer({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryReviewWithReviewer(key.creator, query)).data : (await (await initQueryClient(rootGetters)).queryReviewWithReviewer(key.creator)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryReviewWithReviewer(key.creator, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ReviewWithReviewer', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReviewWithReviewer', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReviewWithReviewer']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryReviewWithReviewer', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryReviewWithReviewed({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryReviewWithReviewed(key.type, key.id, query)).data : (await (await initQueryClient(rootGetters)).queryReviewWithReviewed(key.type, key.id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryReviewWithReviewed(key.type, key.id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ReviewWithReviewed', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReviewWithReviewed', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReviewWithReviewed']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryReviewWithReviewed', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPurchase({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPurchase(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPurchase(key.id)).data;\n                commit('QUERY', { query: 'Purchase', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPurchase', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPurchase']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPurchase', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPurchaseAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPurchaseAll(query)).data : (await (await initQueryClient(rootGetters)).queryPurchaseAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPurchaseAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PurchaseAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPurchaseAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPurchaseAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPurchaseAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPurchaseWithListing({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPurchaseWithListing(key.listing, query)).data : (await (await initQueryClient(rootGetters)).queryPurchaseWithListing(key.listing)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPurchaseWithListing(key.listing, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PurchaseWithListing', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPurchaseWithListing', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPurchaseWithListing']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPurchaseWithListing', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPurchaseWithBuyer({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPurchaseWithBuyer(key.buyer, query)).data : (await (await initQueryClient(rootGetters)).queryPurchaseWithBuyer(key.buyer)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPurchaseWithBuyer(key.buyer, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PurchaseWithBuyer', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPurchaseWithBuyer', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPurchaseWithBuyer']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPurchaseWithBuyer', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryListing({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryListing(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryListing(key.id)).data;\n                commit('QUERY', { query: 'Listing', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryListing', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getListing']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryListing', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryListingAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryListingAll(query)).data : (await (await initQueryClient(rootGetters)).queryListingAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryListingAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ListingAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryListingAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getListingAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryListingAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryListingWithSeller({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryListingWithSeller(key.seller, query)).data : (await (await initQueryClient(rootGetters)).queryListingWithSeller(key.seller)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryListingWithSeller(key.seller, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ListingWithSeller', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryListingWithSeller', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getListingWithSeller']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryListingWithSeller', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryListingWithReview({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryListingWithReview(key.review, query)).data : (await (await initQueryClient(rootGetters)).queryListingWithReview(key.review)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryListingWithReview(key.review, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ListingWithReview', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryListingWithReview', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getListingWithReview']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryListingWithReview', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryListingWithName({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryListingWithName(key.name, query)).data : (await (await initQueryClient(rootGetters)).queryListingWithName(key.name)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryListingWithName(key.name, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ListingWithName', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryListingWithName', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getListingWithName']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryListingWithName', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAccount({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAccount(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryAccount(key.id)).data;\n                commit('QUERY', { query: 'Account', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAccount', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAccountWallet({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAccountWallet(key.user, query)).data : (await (await initQueryClient(rootGetters)).queryAccountWallet(key.user)).data;\n                commit('QUERY', { query: 'AccountWallet', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAccountWallet', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAccountWallet']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAccountWallet', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAccountAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAccountAll(query)).data : (await (await initQueryClient(rootGetters)).queryAccountAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAccountAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AccountAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAccountAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAccountAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAccountAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAccountWithName({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAccountWithName(key.name, query)).data : (await (await initQueryClient(rootGetters)).queryAccountWithName(key.name)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAccountWithName(key.name, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AccountWithName', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAccountWithName', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAccountWithName']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAccountWithName', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAccountWithReview({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAccountWithReview(key.review, query)).data : (await (await initQueryClient(rootGetters)).queryAccountWithReview(key.review)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAccountWithReview(key.review, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AccountWithReview', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAccountWithReview', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAccountWithReview']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAccountWithReview', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpdatePurchase({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePurchase(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePurchase:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePurchase:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteListing({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteListing(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteListing:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteListing:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateListing({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateListing(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateListing:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateListing:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePurchase({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePurchase(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePurchase:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePurchase:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteReview({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteReview(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteReview:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteReview:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateReview({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateReview(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateReview:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateReview:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateListing({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateListing(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateListing:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateListing:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreatePurchase({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePurchase(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePurchase:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePurchase:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateReview({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateReview(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateReview:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateReview:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpdatePurchase({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePurchase(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePurchase:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePurchase:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteListing({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteListing(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteListing:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteListing:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateListing({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateListing(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateListing:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateListing:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePurchase({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePurchase(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePurchase:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePurchase:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteReview({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteReview(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteReview:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteReview:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateReview({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateReview(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateReview:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateReview:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateListing({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateListing(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateListing:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateListing:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreatePurchase({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePurchase(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePurchase:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePurchase:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateReview({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateReview(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateReview:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateReview:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport FloppyDisckMercuryFloppyDisckMercuryMercury from './FloppyDisck/Mercury/FloppyDisck.Mercury.Mercury';\nexport default {\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    FloppyDisckMercuryFloppyDisckMercuryMercury: load(FloppyDisckMercuryFloppyDisckMercuryMercury, 'FloppyDisck.Mercury.Mercury'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"FloppyDisck.Mercury.Mercury\" moduleType=\"Review\"  />\n\t\t<SpType modulePath=\"FloppyDisck.Mercury.Mercury\" moduleType=\"Purchase\"  />\n\t\t<SpType modulePath=\"FloppyDisck.Mercury.Mercury\" moduleType=\"Listing\"  />\n\t\t<SpType modulePath=\"FloppyDisck.Mercury.Mercury\" moduleType=\"Account\"  />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=6cde426e\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { AvgReview } from \"../Mercury/util\";\nexport const protobufPackage = \"FloppyDisck.Mercury.Mercury\";\nconst baseAccount = { creator: \"\", id: 0, name: \"\" };\nexport const Account = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.review !== undefined) {\n            AvgReview.encode(message.review, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.review = AvgReview.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAccount };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.review !== undefined && object.review !== null) {\n            message.review = AvgReview.fromJSON(object.review);\n        }\n        else {\n            message.review = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.review !== undefined &&\n            (obj.review = message.review\n                ? AvgReview.toJSON(message.review)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAccount };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.review !== undefined && object.review !== null) {\n            message.review = AvgReview.fromPartial(object.review);\n        }\n        else {\n            message.review = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Price } from \"../Mercury/util\";\nexport const protobufPackage = \"FloppyDisck.Mercury.Mercury\";\nconst basePurchase = {\n    creator: \"\",\n    id: 0,\n    listing: 0,\n    description: \"\",\n};\nexport const Purchase = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.listing !== 0) {\n            writer.uint32(24).uint64(message.listing);\n        }\n        if (message.price !== undefined) {\n            Price.encode(message.price, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.description !== \"\") {\n            writer.uint32(42).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePurchase };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.listing = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.price = Price.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePurchase };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.listing !== undefined && object.listing !== null) {\n            message.listing = Number(object.listing);\n        }\n        else {\n            message.listing = 0;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Price.fromJSON(object.price);\n        }\n        else {\n            message.price = undefined;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.listing !== undefined && (obj.listing = message.listing);\n        message.price !== undefined &&\n            (obj.price = message.price ? Price.toJSON(message.price) : undefined);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePurchase };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.listing !== undefined && object.listing !== null) {\n            message.listing = object.listing;\n        }\n        else {\n            message.listing = 0;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Price.fromPartial(object.price);\n        }\n        else {\n            message.price = undefined;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"FloppyDisck.Mercury.Mercury\";\nconst baseReviewed = { type: \"\", id: 0 };\nexport const Reviewed = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseReviewed };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseReviewed };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseReviewed };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseReview = { creator: \"\", id: 0, score: 0, description: \"\" };\nexport const Review = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.reviewed !== undefined) {\n            Reviewed.encode(message.reviewed, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.score !== 0) {\n            writer.uint32(32).uint32(message.score);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(42).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseReview };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.reviewed = Reviewed.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.score = reader.uint32();\n                    break;\n                case 5:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseReview };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.reviewed !== undefined && object.reviewed !== null) {\n            message.reviewed = Reviewed.fromJSON(object.reviewed);\n        }\n        else {\n            message.reviewed = undefined;\n        }\n        if (object.score !== undefined && object.score !== null) {\n            message.score = Number(object.score);\n        }\n        else {\n            message.score = 0;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.reviewed !== undefined &&\n            (obj.reviewed = message.reviewed\n                ? Reviewed.toJSON(message.reviewed)\n                : undefined);\n        message.score !== undefined && (obj.score = message.score);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseReview };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.reviewed !== undefined && object.reviewed !== null) {\n            message.reviewed = Reviewed.fromPartial(object.reviewed);\n        }\n        else {\n            message.reviewed = undefined;\n        }\n        if (object.score !== undefined && object.score !== null) {\n            message.score = object.score;\n        }\n        else {\n            message.score = 0;\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Price, AvgReview } from \"../Mercury/util\";\nexport const protobufPackage = \"FloppyDisck.Mercury.Mercury\";\nconst baseListing = { creator: \"\", id: 0, name: \"\", description: \"\" };\nexport const Listing = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.price !== undefined) {\n            Price.encode(message.price, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(42).string(message.description);\n        }\n        if (message.review !== undefined) {\n            AvgReview.encode(message.review, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseListing };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.price = Price.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.description = reader.string();\n                    break;\n                case 6:\n                    message.review = AvgReview.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseListing };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Price.fromJSON(object.price);\n        }\n        else {\n            message.price = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.review !== undefined && object.review !== null) {\n            message.review = AvgReview.fromJSON(object.review);\n        }\n        else {\n            message.review = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.price !== undefined &&\n            (obj.price = message.price ? Price.toJSON(message.price) : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.review !== undefined &&\n            (obj.review = message.review\n                ? AvgReview.toJSON(message.review)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseListing };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Price.fromPartial(object.price);\n        }\n        else {\n            message.price = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.review !== undefined && object.review !== null) {\n            message.review = AvgReview.fromPartial(object.review);\n        }\n        else {\n            message.review = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}